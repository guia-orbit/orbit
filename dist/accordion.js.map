{
  "version": 3,
  "sources": ["../src/accordion.ts"],
  "sourcesContent": ["\n/*\n * ORBIT \n * Accordion Utilities \n * \n */ \n\n//import { AdjustTrackingUrl } from './adjust';\n\n// Global object\nwindow['Orbit'] = window['Orbit'] || {}; \nvar Orbit = window['Orbit'];\n\n\n// Define the type for an element with the necessary properties\ninterface AccordionElement extends HTMLElement {\n    // style: {\n    //     maxHeight: string | null;\n    // };\n    scrollHeight: number;\n    nextElementSibling: AccordionElement;\n}\n\nexport class Accordion {\n\n    constructor() {\n    }\n    \n    // container (holds set)\n    // - item (one item)\n    // - - header/title\n    // - - - indicator expanded/collapsed \n    // - - content panel\n\n\n    init() {\n\n        // Find accordions\n        const accordionBtns = document.querySelectorAll(\"[wfu-ui-accordion=header]\") as NodeListOf<AccordionElement>;\n\n        accordionBtns.forEach((accordion: AccordionElement) => {\n\n          accordion.onclick = function () {\n            accordion.classList.toggle(\"is-open\");\n        \n            let content = accordion.nextElementSibling;\n            console.log(content);\n        \n            if (content.style.maxHeight) {\n              //this is if the accordion is open\n              content.style.maxHeight = \"auto\";\n            } else {\n              //if the accordion is currently closed\n              content.style.maxHeight = content.scrollHeight + \"px\";\n              console.log(content.style.maxHeight);\n            }\n          };\n        });\n\n    }\n\n}\n\n    \n    \n\n    \n    \n/* DEPRECATED CODE\n\n\nconst accordionBtns = document.querySelectorAll(\"[wfu-ui-accordion=header]\");\n\naccordionBtns.forEach((accordion) => {\n  accordion.onclick = function () {\n    this.classList.toggle(\"is-open\");\n\n    let content = this.nextElementSibling;\n    console.log(content);\n\n    if (content.style.maxHeight) {\n      //this is if the accordion is open\n      content.style.maxHeight = null;\n    } else {\n      //if the accordion is currently closed\n      content.style.maxHeight = content.scrollHeight + \"px\";\n      console.log(content.style.maxHeight);\n    }\n  };\n});\n\n*/\n    "],
  "mappings": ";;AAUA,SAAO,WAAW,OAAO,YAAY,CAAC;AACtC,MAAI,QAAQ,OAAO;AAYZ,MAAM,YAAN,MAAgB;AAAA,IAEnB,cAAc;AAAA,IACd;AAAA,IASA,OAAO;AAGH,YAAM,gBAAgB,SAAS,iBAAiB,2BAA2B;AAE3E,oBAAc,QAAQ,CAAC,cAAgC;AAErD,kBAAU,UAAU,WAAY;AAC9B,oBAAU,UAAU,OAAO,SAAS;AAEpC,cAAI,UAAU,UAAU;AACxB,kBAAQ,IAAI,OAAO;AAEnB,cAAI,QAAQ,MAAM,WAAW;AAE3B,oBAAQ,MAAM,YAAY;AAAA,UAC5B,OAAO;AAEL,oBAAQ,MAAM,YAAY,QAAQ,eAAe;AACjD,oBAAQ,IAAI,QAAQ,MAAM,SAAS;AAAA,UACrC;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IAEL;AAAA,EAEJ;",
  "names": []
}
